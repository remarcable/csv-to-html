{"version":3,"sources":["FileDropZone.js","Row.js","DisplayCSV.js","App.js","index.js"],"names":["FileDropZone","onDrop","useDropzone","accept","maxFiles","getRootProps","getInputProps","isDragActive","className","Row","row","headers","map","data","i","DisplayCSV","file","useState","setHeaders","rows","setRows","useEffect","Papa","parse","complete","dataHeaders","dataRows","App","setFile","droppedFile","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAwBeA,MAnBf,YAAmC,IAAXC,EAAU,EAAVA,OACpB,EAAsDC,YAAY,CAC9DD,SACAE,OAAQ,OACRC,SAAU,IAHNC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,aAMrC,OACI,gDAASF,KAAT,IAAyBG,UAAU,YAAnC,UACI,qCAAWF,MACVC,EACG,uDAEA,sF,yBCDDE,MAjBf,YAAgC,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,QAChB,OACI,oCACI,6BAAKD,EAAI,KAERA,EAAIE,KAAI,SAACC,EAAMC,GAAP,OACL,gCACI,6BAAKH,EAAQG,KACb,4BAAID,MAFEC,MAMd,2BCYGC,MApBf,YAA+B,IAATC,EAAQ,EAARA,KAClB,EAA8BC,mBAAS,MAAvC,mBAAON,EAAP,KAAgBO,EAAhB,KACA,EAAwBD,mBAAS,MAAjC,mBAAOE,EAAP,KAAaC,EAAb,KAWA,OAVAC,qBAAU,WACNC,IAAKC,MAAMP,EAAM,CACbQ,SAAU,YAAe,IAAZX,EAAW,EAAXA,KACT,cAAmCA,GAA5BY,EAAP,KAAuBC,EAAvB,WACAR,EAAWO,GACXL,EAAQM,QAGjB,CAACV,IAGA,+BACKG,GAAQR,GAAWQ,EAAKP,KAAI,SAACF,EAAKI,GAAN,OAAY,cAAC,EAAD,CAAaJ,IAAKA,EAAKC,QAASA,GAAtBG,SCAhDa,MAdf,WACI,MAAwBV,mBAAS,MAAjC,mBAAOD,EAAP,KAAaY,EAAb,KAKA,OACI,0BAASpB,UAAU,MAAnB,UACI,uDACCQ,EAAO,cAAC,EAAD,CAAYA,KAAMA,IAAW,cAAC,EAAD,CAAcf,OAP5C,SAAC4B,GACZD,EAAQC,EAAY,WCH5BC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.e28fbf2e.chunk.js","sourcesContent":["import React from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport \"./FileDropZone.css\";\n\nfunction FileDropZone({ onDrop }) {\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n        onDrop,\n        accept: \".csv\",\n        maxFiles: 1,\n    });\n\n    return (\n        <div {...getRootProps()} className=\"drop-zone\">\n            <input {...getInputProps()} />\n            {isDragActive ? (\n                <p>Drop the file here ...</p>\n            ) : (\n                <p>Drag 'n' drop a CSV here, or click to select one</p>\n            )}\n        </div>\n    );\n}\n\nexport default FileDropZone;\n","function Row({ row, headers }) {\n    return (\n        <section>\n            <h2>{row[1]}</h2>\n\n            {row.map((data, i) => (\n                <div key={i}>\n                    <h3>{headers[i]}</h3>\n                    <p>{data}</p>\n                </div>\n            ))}\n\n            <hr />\n        </section>\n    );\n}\n\nexport default Row;\n","import React, { useEffect, useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Row from \"./Row\";\n\nfunction DisplayCSV({ file }) {\n    const [headers, setHeaders] = useState(null);\n    const [rows, setRows] = useState(null);\n    useEffect(() => {\n        Papa.parse(file, {\n            complete: ({ data }) => {\n                const [dataHeaders, ...dataRows] = data;\n                setHeaders(dataHeaders);\n                setRows(dataRows);\n            },\n        });\n    }, [file]);\n\n    return (\n        <main>\n            {rows && headers && rows.map((row, i) => <Row key={i} row={row} headers={headers} />)}\n        </main>\n    );\n}\n\nexport default DisplayCSV;\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport FileDropZone from \"./FileDropZone\";\nimport DisplayCSV from \"./DisplayCSV\";\n\nfunction App() {\n    const [file, setFile] = useState(null);\n    const onDrop = (droppedFile) => {\n        setFile(droppedFile[0]);\n    };\n\n    return (\n        <section className=\"App\">\n            <h1>CSV to HTML converter</h1>\n            {file ? <DisplayCSV file={file} /> : <FileDropZone onDrop={onDrop} />}\n        </section>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}